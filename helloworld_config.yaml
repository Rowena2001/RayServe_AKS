# FILE NAME: helloworld_config.yaml
# This configuration file is used to deploy a Hello World application on Ray Serve and AKS.

apiVersion: ray.io/v1alpha1
kind: RayService
metadata:
  name: helloworld
spec:
  serviceUnhealthySecondThreshold: 300 # Config for the health check threshold for service. Default value is 60.
  deploymentUnhealthySecondThreshold: 300 # Config for the health check threshold for deployments. Default value is 60.
  # serveConfigV2 takes a yaml multi-line scalar, which should be a Ray Serve multi-application config. See https://docs.ray.io/en/latest/serve/multi-app.html.
  # Only one of serveConfig and serveConfigV2 should be used.
  serveConfig:
    importPath: helloworld.DagNode
    runtimeEnv: |
      working_dir: "https://dev.azure.com/msasg/Bing_and_IPG/_apis/git/repositories/DLIS_Intern_Deployments/items/items?path=/&versionDescriptor[versionOptions]=0&versionDescriptor[versionType]=0&versionDescriptor[version]=main&resolveLfs=true&$format=zip&api-version=5.0&download=true"
    deployments:
      - name: f
        numReplicas: 1
        rayActorOptions:
          numCpus: 0.1
      - name: BasicDriver
        numReplicas: 1
        rayActorOptions:
          numCpus: 0.1
  rayClusterConfig:
    rayVersion: '2.5.0' # should match the Ray version in the image of the containers
    # Ray head pod template.
    headGroupSpec:
      rayStartParams:
        dashboard-host: '0.0.0.0'
      #pod template
      template:
        spec:
          containers:
            - name: ray-head
              image: rayproject/ray:2.5.0
              resources:
                limits:
                  cpu: "2"
                  memory: "2Gi"
                requests:
                  cpu: "500m"
                  memory: "2Gi"
              ports:
                - containerPort: 6379
                  name: gcs-server
                - containerPort: 8265 # Ray dashboard
                  name: dashboard
                - containerPort: 10001
                  name: client
                - containerPort: 8000
                  name: serve
          tolerations:
            - key: "sku"
              operator: "Equal"
              value: "gpu"
              effect: "NoSchedule"
    workerGroupSpecs:
      # the pod replicas in this group typed worker
      - replicas: 1
        minReplicas: 1
        maxReplicas: 5
        # logical group name, for this called small-group, also can be functional
        groupName: small-group
        rayStartParams: {}
        #pod template
        template:
          spec:
            containers:
              - name: ray-worker # must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc'
                image: rayproject/ray:2.5.0
                lifecycle:
                  preStop:
                    exec:
                      command: ["/bin/sh","-c","ray stop"]
                resources:
                  limits:
                    cpu: "1"
                    memory: "2Gi"
                  requests:
                    cpu: "500m"
                    memory: "2Gi"
            tolerations:
              - key: "sku"
                operator: "Equal"
                value: "gpu"
                effect: "NoSchedule"